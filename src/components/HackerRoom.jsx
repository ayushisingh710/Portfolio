/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import { useThree } from '@react-three/fiber';

const HackerRoom = (props) => {
    const { nodes, materials } = useGLTF('/models/mac-draco.glb');
    const [width, setWidth] = useState(window.innerWidth);
    const [height, setHeight] = useState(window.innerHeight);

    useEffect(() => {
        const handleResize = () => {
            setWidth(window.innerWidth);
            setHeight(window.innerHeight);
        };
        window.addEventListener('resize', handleResize);
        return () => {
            window.removeEventListener('resize', handleResize);
        };
    }, []);

    const scaleFactor = Math.min(width / 1024, height / 768); // adjust scale based on viewport size
    const positionOffset = [0, -4, 0]; // adjust position based on viewport size

    return (
        <group {...props} dispose={null}
            scale={[scaleFactor, scaleFactor, scaleFactor]} position={positionOffset}
        >
            <group position={[0.002, -0.038, 0.414]} rotation={[0.014, 0, 0]} >
                <group position={[0, 2.965, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube008.geometry}
                        material={materials.aluminium}

                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube008_1.geometry}
                        material={materials['matte.001']}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube008_2.geometry}
                        material={materials['screen.001']}
                    />
                </group>
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.keyboard.geometry}
                material={materials.keys}
                position={[1.793, 0, 3.451]}
            />
            <group position={[0, -0.1, 3.394]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube002.geometry}
                    material={materials.aluminium}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube002_1.geometry}
                    material={materials.trackpad}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.touchbar.geometry}
                material={materials.touchbar}
                position={[0, -0.027, 1.201]}
            />
        </group>
    )
}

useGLTF.preload('/models/mac-draco.glb')

export default HackerRoom
